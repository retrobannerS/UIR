@inproceedings{anisyahNaturalLanguageInterface2019,
  title = {Natural {{Language Interface}} to {{Database}} ({{NLIDB}}) for {{Decision Support Queries}}},
  booktitle = {2019 {{International Conference}} on {{Data}} and {{Software Engineering}} ({{ICoDSE}})},
  author = {Anisyah, Ani and Widagdo, Tricya Esterina and Nur Azizah, Fazat},
  date = {2019-11},
  pages = {1--6},
  issn = {2640-0227},
  doi = {10.1109/ICoDSE48700.2019.9092769},
  url = {https://ieeexplore.ieee.org/document/9092769},
  urldate = {2025-06-14},
  abstract = {Data access that is accurate, fast, and precise is a modern need for analysis or business decision making. NLIDB (Natural Language Interface to Database) is a system that allows users to access information from a database by entering requests that are stated in natural language. The NLIDB for Indonesian language that has been built has not been able to handle decision support data queries. The method of translating imperative sentences into SQL queries is done in two stages. The first stage is identifying the imperative sentence and parsing the sentence into a parsed tree that is assisted by the PC-PATR syntactic parser. The second stage is processing the parse tree into an SQL query. The parse tree is analyzed to look for parts of SQL, then do object searching for SQL parts to ontology. The objects found will be arranged into SQL queries. NLIDB application development is carried out to test the results of the translation of imperative sentences into SQL queries and see the application performance in translating imperative sentences into SQL queries. Application development is done with the Python programming language and MySQL database. The application that was built successfully translates imperative sentences into SQL queries for cross tab data, summary data, trend data, and top-N/bottom-N data. The application performance in carrying out the translation process is quite good, but it is necessary to improve performance for the ontology object searching process on the query generator component. Development that can be done for further research is the handling of sentence forms that have affixes and subquery handling.},
  eventtitle = {2019 {{International Conference}} on {{Data}} and {{Software Engineering}} ({{ICoDSE}})},
  langid = {english},
  keywords = {Databases,Decision support queries,Imperative sentences,Market research,Natural languages,NLIDB,Ontologies,Ontology,SQL query,Structured Query Language,Syntactics},
  file = {/Users/retrobanner/Zotero/storage/5GPBB8JJ/Anisyah и др. - 2019 - Natural Language Interface to Database (NLIDB) for Decision Support Queries.pdf}
}

@online{aparicioNaturalLanguageSQL2023,
  title = {Natural language to {{SQL}} in low-code platforms},
  author = {Aparicio, Sofia and Arcadinho, Samuel and Nadkarni, João and Aparício, David and Lages, João and Lourenço, Mariana and Matejczyk, Bartłomiej and Assunção, Filipe},
  date = {2023-08-29},
  eprint = {2308.15239},
  eprinttype = {arXiv},
  eprintclass = {cs},
  doi = {10.48550/arXiv.2308.15239},
  url = {http://arxiv.org/abs/2308.15239},
  urldate = {2025-06-14},
  abstract = {One of the developers' biggest challenges in low-code platforms is retrieving data from a database using SQL queries. Here, we propose a pipeline allowing developers to write natural language (NL) to retrieve data. In this study, we collect, label, and validate data covering the SQL queries most often performed by OutSystems users. We use that data to train a NL model that generates SQL. Alongside this, we describe the entire pipeline, which comprises a feedback loop that allows us to quickly collect production data and use it to retrain our SQL generation model. Using crowd-sourcing, we collect 26k NL and SQL pairs and obtain an additional 1k pairs from production data. Finally, we develop a UI that allows developers to input a NL query in a prompt and receive a user-friendly representation of the resulting SQL query. We use A/B testing to compare four different models in production and observe a 240\% improvement in terms of adoption of the feature, 220\% in terms of engagement rate, and a 90\% decrease in failure rate when compared against the first model that we put into production, showcasing the effectiveness of our pipeline in continuously improving our feature.},
  langid = {english},
  pubstate = {prepublished},
  keywords = {Computer Science - Artificial Intelligence},
  file = {/Users/retrobanner/Zotero/storage/C5IUA9X6/Aparicio и др. - 2023 - Natural language to SQL in low-code platforms.pdf;/Users/retrobanner/Zotero/storage/VV8EWAEF/2308.html}
}

@inproceedings{baikBridgingSemanticGap2019,
  title = {Bridging the {{Semantic Gap}} with {{SQL Query Logs}} in {{Natural Language Interfaces}} to {{Databases}}},
  booktitle = {2019 {{IEEE}} 35th {{International Conference}} on {{Data Engineering}} ({{ICDE}})},
  author = {Baik, Christopher and Jagadish, H. V. and Li, Yunyao},
  date = {2019-04},
  eprint = {1902.00031},
  eprinttype = {arXiv},
  eprintclass = {cs},
  pages = {374--385},
  doi = {10.1109/ICDE.2019.00041},
  url = {http://arxiv.org/abs/1902.00031},
  urldate = {2025-06-14},
  abstract = {A critical challenge in constructing a natural language interface to database (NLIDB) is bridging the semantic gap between a natural language query (NLQ) and the underlying data. Two specific ways this challenge exhibits itself is through keyword mapping and join path inference. Keyword mapping is the task of mapping individual keywords in the original NLQ to database elements (such as relations, attributes or values). It is challenging due to the ambiguity in mapping the user's mental model and diction to the schema definition and contents of the underlying database. Join path inference is the process of selecting the relations and join conditions in the FROM clause of the final SQL query, and is difficult because NLIDB users lack the knowledge of the database schema or SQL and therefore cannot explicitly specify the intermediate tables and joins needed to construct a final SQL query. In this paper, we propose leveraging information from the SQL query log of a database to enhance the performance of existing NLIDBs with respect to these challenges. We present a system Templar that can be used to augment existing NLIDBs. Our extensive experimental evaluation demonstrates the effectiveness of our approach, leading up to 138\% improvement in top-1 accuracy in existing NLIDBs by leveraging SQL query log information.},
  langid = {english},
  keywords = {Computer Science - Databases},
  file = {/Users/retrobanner/Zotero/storage/JLKJ3EV9/Baik и др. - 2019 - Bridging the Semantic Gap with SQL Query Logs in Natural Language Interfaces to Databases.pdf;/Users/retrobanner/Zotero/storage/9XIQKTB2/1902.html}
}

@article{baisApplyingInductiveLogic2024,
  title = {Applying inductive logic programming to automate the function of an intelligent natural language interfaces for databases},
  author = {Bais, Hanane and Machkour, Mustapha},
  date = {2024-11-01},
  journaltitle = {Indonesian Journal of Electrical Engineering and Computer Science},
  volume = {36},
  number = {2},
  pages = {983--993},
  issn = {2502-4760},
  doi = {10.11591/ijeecs.v36.i2.pp983-993},
  url = {https://ijeecs.iaescore.com/index.php/IJEECS/article/view/35923},
  urldate = {2025-06-14},
  abstract = {One of the foundational subjects in both artificial intelligence (AI) and database technologies is natural language interfaces for databases (NLIDB). The primary goal of NLIDB is to enable users to interact with databases using natural languages such as English, Arabic, and French. While many existing NLIDBs rely on linguistic operations to meet the challenges of user’s ambiguity existing in natural language queries (NLQ), there is currently a growing emphasis on utilizing inductive logic programming (ILP) to develop natural language processing (NLP) applications. This is because ILP reduces the requirement for linguistic expertise in building NLP systems. This paper outlines a methodology for automating the construction of NLIDB. This method utilizes ILP to derive transfer rules that directly translate NLQ into a clear and unambiguous logical query, which subsequently translatable into database query languages (DQL). To acquire these rules, our system was trained within a corpus consisting of parallel examples of NLQs and their logical interpretations. The experimental results demonstrate the promise of this approach, as it enables the direct translation of all NLQs with grammatical structures similar to those already present in the trained corpus into a logical query.},
  issue = {2},
  langid = {english},
  keywords = {Artificial intelligence,Database,Inductive logic programming,Linguistic operations,Natural language processing},
  file = {/Users/retrobanner/Zotero/storage/44F4ZFFL/Bais и Machkour - 2024 - Applying inductive logic programming to automate the function of an intelligent natural language int.pdf}
}

@article{baskaranSyntaticSemanticVisual2013,
  title = {Syntatic and {{Semantic Visual Query Building Using Natural Language Processing}}},
  author = {Baskaran, Sneha and Baskaran, Swetha and Gopalarathinam, Shwetha},
  date = {2013},
  journaltitle = {International Journal of Engineering Research},
  volume = {2},
  number = {9},
  abstract = {With the latest advancement in technology and growing data there is a need to extract information in a more efficient and quicker manner using queries. This gives rise to the need for a more easy-to-use query interface. So far, the typical query interfaces are GUI based visual query interfaces. Visual query interfaces however, have limitations especially when they are used for accessing large and complex datasets. The ease of expressing one’s queries is limited due to language barrier and the knowledge of precise key words. Therefore, we are developing a novel query interface where users can use natural language expressions to help author visual queries and address the knowledge gap.},
  langid = {english},
  file = {/Users/retrobanner/Zotero/storage/XNXKK76A/Baskaran и др. - 2013 - Syntatic and Semantic Visual Query Building Using Natural Language Processing.pdf}
}

@article{bolyabkinIntellektualnayaSistemaDlya2021,
  title = {Интеллектуальная система для преобразования запросов на естественном языке в {{SQL}} и их выполнения},
  author = {Болябкин, М. В. and Овчинников, Ф. В. and Башмуров, Н. А.},
  date = {2021},
  journaltitle = {Международный журнал гуманитарных и естественных наук},
  number = {12--1},
  pages = {134--138},
  publisher = {Общество с ограниченной ответственностью «Капитал»},
  location = {Россия, Новосибирск},
  issn = {2500-1000},
  url = {https://cyberleninka.ru/article/n/intellektualnaya-sistema-dlya-preobrazovaniya-zaprosov-na-estestvennom-yazyke-v-sql-i-ih-vypolneniya},
  urldate = {2025-05-15},
  abstract = {В современном мире хранение и поиск информации играют важную роль. Системы баз данных играют ключевую роль в новой коммерческой системе хранения информации. При попытке получения доступа к данным из базы человек, не обладающий знаниями SQL, может оказаться в затруднительно положении. Это представляет собой существенное ограничение в такой стране, как Россия, поскольку даже сегодня подавляющее большинство населения не обладает техническими знаниями о том, как работать с системами баз данных. В таком случае, обработка естественного языка предполагает значительную работу. Это часть искусственного интеллекта, которая используется для поиска информации, машинного перевода и анализа языка. В этой статье предлагается система, которая позволяет пользователю запрашивать базу данных на языке совместимого режима с помощью удобного графического пользовательского интерфейса, в результате которого пользователь получает требуемые данные.},
  issue = {12--1},
  keywords = {intelligent-system,service},
  file = {/Users/retrobanner/Zotero/storage/Y692FL5X/М.в и др. - 2021 - ИНТЕЛЛЕКТУАЛЬНАЯ СИСТЕМА ДЛЯ ПРЕОБРАЗОВАНИЯ ЗАПРОСОВ НА ЕСТЕСТВЕННОМ ЯЗЫКЕ В SQL И ИХ ВЫПОЛНЕНИЯ.pdf}
}

@article{borodinZadacheSostavleniyaZaprosov2016,
  title = {К задаче составления запросов к базам данных на естественном языке},
  author = {Бородин, Д. С. and Строганов, Ю. В.},
  date = {2016},
  journaltitle = {Новые информационные технологии в автоматизированных системах},
  number = {19},
  pages = {119--126},
  publisher = {Федеральное государственное автономное образовательное учреждение высшего …},
  url = {https://cyberleninka.ru/article/n/k-zadache-sostavleniya-zaprosov-k-bazam-dannyh-na-estestvennom-yazyke},
  urldate = {2025-05-15},
  abstract = {Данная статья содержит описание общей структура системы преобразования запросов к базам данных на естественном языке, а также методов, используемых при преобразовании запросов. Проанализированы возможные проблемы при составлении запросов, а также составлены ограничения на преобразуемые естественно-языковые запросы. Даны основные положения, которые легли в основу разрабатываемого метода преобразования запросов на естественном языке в запросы на формальном языке.},
  keywords = {problem},
  file = {/Users/retrobanner/Zotero/storage/4Y38DY95/Бородин и Строганов - 2016 - К задаче составления запросов к базам данных на естественном языке.pdf}
}

@article{borodulinUvelichenieTochnostiBolshih2024,
  title = {Увеличение точности больших языковых моделей с помощью расширенной поисковой генерации},
  author = {Бородулин, И. В.},
  date = {2024},
  journaltitle = {Вестник науки},
  volume = {3},
  number = {3 (72)},
  pages = {400--405},
  publisher = {Рассказова Любовь Федоровна},
  location = {Россия, Тольятти},
  issn = {2712-8849},
  url = {https://cyberleninka.ru/article/n/uvelichenie-tochnosti-bolshih-yazykovyh-modeley-s-pomoschyu-rasshirennoy-poiskovoy-generatsii},
  urldate = {2025-05-15},
  abstract = {В последние годы большие языковые модели (LLM) стали ключевым элементом в разработке систем искусственного интеллекта, предназначенных для обработки естественного языка. Однако несмотря на значительные успехи, точность и надежность их ответов остаются предметом для улучшений. В данной статье предлагается методика увеличения точности LLM с использованием технологии расширенной поисковой генерации (RAG), которая позволяет динамически интегрировать информацию из внешних источников данных при генерации ответа. Проведено исследование демонстрирующее, как RAG улучшает качество и релевантность ответов LLM, обеспечивая более точную и информативную генерацию текста.},
  issue = {3 (72)},
  langid = {russian},
  keywords = {impoving,llm},
  file = {/Users/retrobanner/Zotero/storage/WRPKVBGJ/И.в - 2024 - УВЕЛИЧЕНИЕ ТОЧНОСТИ БОЛЬШИХ ЯЗЫКОВЫХ МОДЕЛЕЙ С ПОМОЩЬЮ РАСШИРЕННОЙ ПОИСКОВОЙ ГЕНЕРАЦИИ.pdf}
}

@online{bradDatasetNeuralNatural2017,
  title = {Dataset for a {{Neural Natural Language Interface}} for {{Databases}} ({{NNLIDB}})},
  author = {Brad, Florin and Iacob, Radu and Hosu, Ionel and Rebedea, Traian},
  date = {2017-07-11},
  eprint = {1707.03172},
  eprinttype = {arXiv},
  eprintclass = {cs},
  doi = {10.48550/arXiv.1707.03172},
  url = {http://arxiv.org/abs/1707.03172},
  urldate = {2025-06-14},
  abstract = {Progress in natural language interfaces to databases (NLIDB) has been slow mainly due to linguistic issues (such as language ambiguity) and domain portability. Moreover, the lack of a large corpus to be used as a standard benchmark has made data-driven approaches difficult to develop and compare. In this paper, we revisit the problem of NLIDBs and recast it as a sequence translation problem. To this end, we introduce a large dataset extracted from the Stack Exchange Data Explorer website, which can be used for training neural natural language interfaces for databases. We also report encouraging baseline results on a smaller manually annotated test corpus, obtained using an attention-based sequence-to-sequence neural network.},
  langid = {english},
  pubstate = {prepublished},
  keywords = {Computer Science - Computation and Language},
  file = {/Users/retrobanner/Zotero/storage/8JJE5XWS/Brad и др. - 2017 - Dataset for a Neural Natural Language Interface for Databases (NNLIDB).pdf;/Users/retrobanner/Zotero/storage/WDAIKDWR/1707.html}
}

@article{burakovVvedenie2010,
  title = {Введение в системы баз данных: Учебное пособие},
  author = {Бураков, П. В. and Петров, В. Ю.},
  date = {2010},
  journaltitle = {СПб: СПбГУ ИТМО},
  pages = {29},
  langid = {russian},
  file = {/Users/retrobanner/Zotero/storage/6F39SK4I/Бураков и Петров - 2010 - Введение в системы баз данных Учебное пособие.pdf}
}

@inproceedings{cakirDataSecureNaturalLanguage2024,
  title = {Data-{{Secure Natural Language Interfaces}} to {{Databases}} via {{Large Language Models}}},
  booktitle = {2024 8th {{International Symposium}} on {{Innovative Approaches}} in {{Smart Technologies}} ({{ISAS}})},
  author = {Cakir, Duygu and Illik, Volkan and Koc, Kadir Yunus and Deniz, Enes},
  date = {2024-12},
  pages = {1--6},
  doi = {10.1109/ISAS64331.2024.10845720},
  url = {https://ieeexplore.ieee.org/document/10845720},
  urldate = {2025-06-14},
  abstract = {Natural Language Interfaces to Databases (NLIDB) aim to allow users to query databases using natural language, eliminating the need for proficiency in formal query languages like SQL. Recent advancements in Large Language Models (LLMs) have shown promise in connecting natural language and structured query generation. This paper proposes a novel approach utilizing an LLM system to translate natural language queries into optimized SQL statements while ensuring data security by not exposing database contents to external models. The system leverages the database schema. The challenges of working with morphologically rich languages like Turkish are also discussed, along with how the proposed approach addresses these issues.},
  eventtitle = {2024 8th {{International Symposium}} on {{Innovative Approaches}} in {{Smart Technologies}} ({{ISAS}})},
  langid = {english},
  keywords = {Data models,Data privacy,Data security,Data Security,Databases,Large language models,Large Language Models,Natural Language Interfaces to Databases,Natural Language Processing,Natural languages,Personnel,Robustness,SQL Query Generation,Structured Query Language,Translation},
  file = {/Users/retrobanner/Zotero/storage/6LFINE4U/Cakir и др. - 2024 - Data-Secure Natural Language Interfaces to Databases via Large Language Models.pdf}
}

@online{caoRSLSQLRobustSchema2024,
  title = {{{RSL-SQL}}: {{Robust Schema Linking}} in {{Text-to-SQL Generation}}},
  shorttitle = {{{RSL-SQL}}},
  author = {Cao, Zhenbiao and Zheng, Yuanlei and Fan, Zhihao and Zhang, Xiaojin and Chen, Wei and Bai, Xiang},
  date = {2024-11-26},
  eprint = {2411.00073},
  eprinttype = {arXiv},
  eprintclass = {cs},
  doi = {10.48550/arXiv.2411.00073},
  url = {http://arxiv.org/abs/2411.00073},
  urldate = {2025-06-14},
  abstract = {Text-to-SQL generation aims to translate natural language questions into SQL statements. In Text-to-SQL based on large language models, schema linking is a widely adopted strategy to streamline the input for LLMs by selecting only relevant schema elements, therefore reducing noise and computational overhead. However, schema linking faces risks that require caution, including the potential omission of necessary elements and disruption of database structural integrity. To address these challenges, we propose a novel framework called RSL-SQL that combines bidirectional schema linking, contextual information augmentation, binary selection strategy, and multi-turn self-correction. We improve the recall of pattern linking using forward and backward pruning methods, achieving a strict recall of 94\% while reducing the number of input columns by 83\%. Furthermore, it hedges the risk by voting between a full mode and a simplified mode enhanced with contextual information. Experiments on the BIRD and Spider benchmarks demonstrate that our approach achieves SOTA execution accuracy among open-source solutions, with 67.2\% on BIRD and 87.9\% on Spider using GPT-4o. Furthermore, our approach outperforms a series of GPT-4 based Text-to-SQL systems when adopting DeepSeek (much cheaper) with same intact prompts. Extensive analysis and ablation studies confirm the effectiveness of each component in our framework. The codes are available at https://github.com/Laqcce-cao/RSL-SQL.},
  langid = {english},
  pubstate = {prepublished},
  keywords = {Computer Science - Artificial Intelligence,Computer Science - Computation and Language,Computer Science - Databases},
  file = {/Users/retrobanner/Zotero/storage/4EPFGS4V/Cao и др. - 2024 - RSL-SQL Robust Schema Linking in Text-to-SQL Generation.pdf;/Users/retrobanner/Zotero/storage/SNDAC6N5/2411.html}
}

@article{catarciVisualQuerySystems1996,
  title = {Visual {{Query Systems}}},
  author = {Catarci, Tiziana and Costabile, Maria Francesca},
  date = {1996-09-01},
  journaltitle = {Journal of Visual Languages \& Computing},
  volume = {7},
  number = {3},
  pages = {243--245},
  issn = {1045-926X},
  doi = {10.1006/jvlc.1996.0013},
  url = {https://www.sciencedirect.com/science/article/pii/S1045926X96900130},
  urldate = {2025-06-13},
  abstract = {No abstract},
  file = {/Users/retrobanner/Zotero/storage/RQF78ZN8/Catarci и Costabile - 1996 - Visual Query Systems.pdf;/Users/retrobanner/Zotero/storage/98T5Y8UV/S1045926X96900130.html}
}

@article{catarciVisualQuerySystems1997,
  title = {Visual {{Query Systems}} for {{Databases}}: {{A Survey}}},
  shorttitle = {Visual {{Query Systems}} for {{Databases}}},
  author = {Catarci, Tiziana and Costabile, Maria F. and Levialdi, Stefano and Batini, Carlo},
  date = {1997-04-01},
  journaltitle = {Journal of Visual Languages \& Computing},
  volume = {8},
  number = {2},
  pages = {215--260},
  issn = {1045-926X},
  doi = {10.1006/jvlc.1997.0037},
  url = {https://www.sciencedirect.com/science/article/pii/S1045926X97900379},
  urldate = {2025-06-13},
  abstract = {Visual query systems (VQSs) are query systems for databases that use visual representations to depict the domain of interest and express related requests. VQSs can be seen as an evolution of query languages adopted into database management systems; they are designed to improve the effectiveness of the human–computer communication. Thus, their most important features are those that determine the nature of the human–computer dialogue. In order to survey and compare existing VQSs used for querying traditional databases, we first introduce a classification based on such features, namely the adopted visual representations and the interaction strategies. We then identify several user types and match the VQS classes against them, in order to understand which kind of system may be suitable for each kind of user. We also report usability experiments which support our claims. Finally, some of the most important open problems in the VQS area are described.},
  langid = {english},
  file = {/Users/retrobanner/Zotero/storage/BM9TXTG4/Catarci и др. - 1997 - Visual Query Systems for Databases A Survey.pdf;/Users/retrobanner/Zotero/storage/NNSWAS4V/S1045926X97900379.html}
}

@inproceedings{danielthamrinNaturalLanguageInterface2022,
  title = {Natural {{Language Interface}} to {{Database}} ({{NLIDB}}) for {{Interrogative Sentences}} with {{Temporal Elements}} in {{Indonesian Language}}},
  booktitle = {2022 {{International Conference}} on {{Data}} and {{Software Engineering}} ({{ICoDSE}})},
  author = {Daniel Thamrin, Hansel Grady and Widagdo, Tricya Esterina},
  date = {2022-11},
  pages = {120--125},
  issn = {2640-0227},
  doi = {10.1109/ICoDSE56892.2022.9971944},
  url = {https://ieeexplore.ieee.org/document/9971944},
  urldate = {2025-06-14},
  abstract = {Natural Language Interface to Database (NLIDB) is a solution that allows users to retrieve data from databases in natural language. Various studies were conducted to translate Indonesian sentences into database queries, but these studies still have weaknesses. In this study, we propose the translation of interrogative sentences in the temporal database accompanied by the addition of several components that can improve the ability of NLIDB. The translation process is carried out by first masking the input sentence and decomposing the sentence into a collection of syntax trees. Then, the existing parsing tree is selected and the best parsing tree will be selected. Then, the process is continued with the analysis of the query components in the interrogative sentences. The results of the analysis will be translated into parts of database query and parts of database query will be rearranged into database queries. This query will be executed and the result can be evaluated by the user and the user can provide feedback according to the system output. The built NLIDB system can translate interrogative sentences for what, who, when, where, how, if, and how many questions with the types of queries that can be handled are current state, time-slice, sequenced, and non-sequenced.},
  eventtitle = {2022 {{International Conference}} on {{Data}} and {{Software Engineering}} ({{ICoDSE}})},
  langid = {english},
  keywords = {Data mining,Databases,feedback,interrogative sentence,Natural languages,NLIDB,ontology,Software engineering,Syntactics,temporal data},
  file = {/Users/retrobanner/Zotero/storage/KTMS8E4C/Daniel Thamrin и Widagdo - 2022 - Natural Language Interface to Database (NLIDB) for Interrogative Sentences with Temporal Elements in.pdf}
}

@inproceedings{desaiNaturalLanguageInterface2023,
  title = {Natural {{Language Interface}} to the {{Database Management System}} using {{NLTK}} in {{Python}}},
  booktitle = {2023 {{International Conference}} on {{Networking}} and {{Communications}} ({{ICNWC}})},
  author = {Desai, Harshada and Patil, Ashwini},
  date = {2023-04},
  pages = {1--7},
  doi = {10.1109/ICNWC57852.2023.10127509},
  url = {https://ieeexplore.ieee.org/document/10127509},
  urldate = {2025-06-14},
  abstract = {Data is a very important factor in every domain. To manage this data efficiently, we need Database management systems (DBMS). To store and manage the relational database SQL (Structured Query Language) is used. So, while interacting with such a relational database the user should familiarize themselves with SQL and its syntax for writing the query. The Non-expert user needs a lot of time to learn SQL queries and they face a lot of difficulties if the syntax of such queries is wrong. The best solution to overcome this problem is to create a natural language interface for the database system. It allows the non-expert user can interact with the Database using the queries in a natural language like English and get easy access to the database system. The main objective of this paper is to introduce a new approach to retrieving data from the database without using SQL queries. We have proposed and implemented an NLIDB system with a web-user interface that takes the input queries in the English language and converts them into an SQL query. The system was designed for University Database Schema. The system successfully generates a query of select, where clause, aggregate function, AND OR operators and order by keyword based on query in natural form and also display proper output through GUI.},
  eventtitle = {2023 {{International Conference}} on {{Networking}} and {{Communications}} ({{ICNWC}})},
  langid = {english},
  keywords = {Aggregates,CFG,DBMS,MySQL,Natural languages,NLIDB,NLTK,Relational databases,Semantics,SQL Query,Structured Query Language,Syntactics,Writing},
  file = {/Users/retrobanner/Zotero/storage/C9C9XUR6/Desai и Patil - 2023 - Natural Language Interface to the Database Management System using NLTK in Python.pdf}
}

@inproceedings{fanGenSqlGenerativeNatural2023,
  title = {{{GenSql}}: {{A Generative Natural Language Interface}} to {{Database Systems}}},
  shorttitle = {{{GenSql}}},
  booktitle = {2023 {{IEEE}} 39th {{International Conference}} on {{Data Engineering}} ({{ICDE}})},
  author = {Fan, Yuankai and Ren, Tonghui and He, Zhenying and Wang, X.Sean and Zhang, Ye and Li, Xingang},
  date = {2023-04},
  pages = {3603--3606},
  issn = {2375-026X},
  doi = {10.1109/ICDE55515.2023.00278},
  url = {https://ieeexplore.ieee.org/document/10184611},
  urldate = {2025-06-14},
  abstract = {To make databases more accessible to a much broader audience of non-technical users, many applications, such as chatbots and search engines, have developed a natural language (NL) interface for the underlying databases (NLIDB). With the advances in machine learning techniques, most recent research employs language translation models to build NLIDB systems. In this demonstration, we introduce GenSql, a generative NLIDB system that enables users to query databases using NL. Unlike most existing NLIDB systems that attempt to leverage a generalized language translation model to convert NL to SQL queries (NL2SQL) for any database, GenSql utilizes a set of sample queries to capture the specific structure and semantics of a given database and thus to provide more accurate translation results. The underlying NL2SQL model in GenSql is a novel generate-and-rank model named Gar designed by the authors, which first generates a set of generalized SQL queries with corresponding NL expressions from the given sample queries, and ranks the NL expressions to get the best matching one, and hence the SQL query. This demonstration shows the effectiveness of GenSql, especially in answering complex queries, which proves its utility in practice.},
  eventtitle = {2023 {{IEEE}} 39th {{International Conference}} on {{Data Engineering}} ({{ICDE}})},
  langid = {english},
  keywords = {Databases,Generate-and-rank,Machine learning,Natural languages,NL2SQL,NLIDB,Prototypes,Search engines,Semantics,Structured Query Language},
  file = {/Users/retrobanner/Zotero/storage/TF8YH4E8/Fan и др. - 2023 - GenSql A Generative Natural Language Interface to Database Systems.pdf}
}

@online{gaoPreviewXiYanSQLMultiGenerator2025,
  title = {A {{Preview}} of {{XiYan-SQL}}: {{A Multi-Generator Ensemble Framework}} for {{Text-to-SQL}}},
  shorttitle = {A {{Preview}} of {{XiYan-SQL}}},
  author = {Gao, Yingqi and Liu, Yifu and Li, Xiaoxia and Shi, Xiaorong and Zhu, Yin and Wang, Yiming and Li, Shiqi and Li, Wei and Hong, Yuntao and Luo, Zhiling and Gao, Jinyang and Mou, Liyu and Li, Yu},
  date = {2025-02-10},
  eprint = {2411.08599},
  eprinttype = {arXiv},
  eprintclass = {cs},
  doi = {10.48550/arXiv.2411.08599},
  url = {http://arxiv.org/abs/2411.08599},
  urldate = {2025-06-15},
  abstract = {To tackle the challenges of large language model performance in natural language to SQL tasks, we introduce XiYan-SQL, an innovative framework that employs a multi-generator ensemble strategy to improve candidate generation. We introduce M-Schema, a semi-structured schema representation method designed to enhance the understanding of database structures. To enhance the quality and diversity of generated candidate SQL queries, XiYan-SQL integrates the significant potential of in-context learning (ICL) with the precise control of supervised fine-tuning. On one hand, we propose a series of training strategies to fine-tune models to generate high-quality candidates with diverse preferences. On the other hand, we implement the ICL approach with an example selection method based on named entity recognition to prevent overemphasis on entities. The refiner optimizes each candidate by correcting logical or syntactical errors. To address the challenge of identifying the best candidate, we fine-tune a selection model to distinguish nuances of candidate SQL queries. The experimental results on multiple dialect datasets demonstrate the robustness of XiYan-SQL in addressing challenges across different scenarios. Overall, our proposed XiYan-SQL achieves the state-of-the-art execution accuracy of 75.63\% on Bird benchmark, 89.65\% on the Spider test set, 69.86\% on SQL-Eval, 41.20\% on NL2GQL. The proposed framework not only enhances the quality and diversity of SQL queries but also outperforms previous methods.},
  pubstate = {prepublished},
  version = {3},
  keywords = {Computer Science - Artificial Intelligence,Computer Science - Computation and Language,Computer Science - Databases,Computer Science - Machine Learning},
  file = {/Users/retrobanner/Zotero/storage/2ESITM9Z/Gao и др. - 2025 - A Preview of XiYan-SQL A Multi-Generator Ensemble Framework for Text-to-SQL.pdf;/Users/retrobanner/Zotero/storage/TFEF5K2T/2411.html}
}

@article{hamazNovelMethodProviding2017,
  title = {A novel method for providing relational databases with rich semantics and natural language processing},
  author = {Hamaz, Kamal and Benchikha, Fouzia},
  date = {2017-04-10},
  journaltitle = {JEIM},
  volume = {30},
  number = {3},
  pages = {503--525},
  issn = {1741-0398},
  doi = {10.1108/JEIM-01-2015-0005},
  url = {https://www.emerald.com/insight/content/doi/10.1108/JEIM-01-2015-0005/full/html},
  urldate = {2025-06-14},
  abstract = {Purpose               With the development of systems and applications, the number of users interacting with databases has increased considerably. The relational database model is still considered as the most used model for data storage and manipulation. However, it does not offer any semantic support for the stored data which can facilitate data access for the users. Indeed, a large number of users are intimidated when retrieving data because they are non-technical or have little technical knowledge. To overcome this problem, researchers are continuously developing new techniques for Natural Language Interfaces to Databases (NLIDB). Nowadays, the usage of existing NLIDBs is not widespread due to their deficiencies in understanding natural language (NL) queries. In this sense, the purpose of this paper is to propose a novel method for an intelligent understanding of NL queries using semantically enriched database sources.                                         Design/methodology/approach               First a reverse engineering process is applied to extract relational database hidden semantics. In the second step, the extracted semantics are enriched further using a domain ontology. After this, all semantics are stored in the same relational database. The phase of processing NL queries uses the stored semantics to generate a semantic tree.                                         Findings               The evaluation part of the work shows the advantages of using a semantically enriched database source to understand NL queries. Additionally, enriching a relational database has given more flexibility to understand contextual and synonymous words that may be used in a NL query.                                         Originality/value               Existing NLIDBs are not yet a standard option for interfacing a relational database due to their lack for understanding NL queries. Indeed, the techniques used in the literature have their limits. This paper handles those limits by identifying the NL elements by their semantic nature in order to generate a semantic tree. This last is a key solution towards an intelligent understanding of NL queries to relational databases.},
  langid = {english},
  file = {/Users/retrobanner/Zotero/storage/Q9MBNPC5/Hamaz и Benchikha - 2017 - A novel method for providing relational databases with rich semantics and natural language processin.pdf}
}

@online{huangExploringLandscapeTexttoSQL2025,
  title = {Exploring the {{Landscape}} of {{Text-to-SQL}} with {{Large Language Models}}: {{Progresses}}, {{Challenges}} and {{Opportunities}}},
  shorttitle = {Exploring the {{Landscape}} of {{Text-to-SQL}} with {{Large Language Models}}},
  author = {Huang, Yiming and Guo, Jiyu and Mao, Wenxin and Gao, Cuiyun and Han, Peiyi and Liu, Chuanyi and Ling, Qing},
  date = {2025-05-28},
  eprint = {2505.23838},
  eprinttype = {arXiv},
  eprintclass = {cs},
  doi = {10.48550/arXiv.2505.23838},
  url = {http://arxiv.org/abs/2505.23838},
  urldate = {2025-06-15},
  abstract = {Converting natural language (NL) questions into SQL queries, referred to as Text-to-SQL, has emerged as a pivotal technology for facilitating access to relational databases, especially for users without SQL knowledge. Recent progress in large language models (LLMs) has markedly propelled the field of natural language processing (NLP), opening new avenues to improve text-to-SQL systems. This study presents a systematic review of LLM-based text-to-SQL, focusing on four key aspects: (1) an analysis of the research trends in LLM-based text-to-SQL; (2) an in-depth analysis of existing LLM-based text-to-SQL techniques from diverse perspectives; (3) summarization of existing text-to-SQL datasets and evaluation metrics; and (4) discussion on potential obstacles and avenues for future exploration in this domain. This survey seeks to furnish researchers with an in-depth understanding of LLM-based text-to-SQL, sparking new innovations and advancements in this field.},
  pubstate = {prepublished},
  version = {1},
  keywords = {Computer Science - Computation and Language,Computer Science - Information Retrieval},
  file = {/Users/retrobanner/Zotero/storage/IVG4PF7M/Huang и др. - 2025 - Exploring the Landscape of Text-to-SQL with Large Language Models Progresses, Challenges and Opport.pdf;/Users/retrobanner/Zotero/storage/54DYWAFP/2505.html}
}

@inproceedings{ivanovObzorSovremennyhNoSQL2019,
  title = {Обзор современных NoSQL баз данных},
  booktitle = {Информационно-вычислительные технологии и их приложения: сборник статей XXIII Международной научно-технической конференции, Пенза, 13–14 июня 2019 года.},
  author = {Иванов, Вячеслав Александрович and Лебедева, Марина Юрьевна},
  date = {2019},
  pages = {86--90},
  publisher = {Пензенский государственный аграрный университет},
  location = {Пенза},
  url = {https://elibrary.ru/item.asp?id=39149615},
  urldate = {2025-06-12},
  abstract = {В статье рассматриваются различные NoSQL базы данных: Hbase, Cassandra, Redis, MongoDB, а также их преимущества и недостатки, характеристики и особенности. Составлена сравнительная характеристика этих хранилищ данных по основным параметрам.},
  langid = {russian},
  keywords = {Базы Данных,Нереляционные Бд},
  file = {/Users/retrobanner/Zotero/storage/A7BLTW44/Иванов и Лебедева - 2019 - Обзор Современных Nosql Баз Данных.pdf}
}

@online{KakChitayuSeychas2023,
  title = {Как я читаю сейчас, путешествие по ридерам},
  date = {2023-07-13},
  url = {https://habr.com/ru/articles/747904/},
  urldate = {2025-05-15},
  abstract = {Первые гаджеты и опыт чтения Совсем недавно открыл для себя всю мощь Zotero. Опыт чтения с помощью этой программы ничем не уступает аналогичному с iBooks, Readwise, Alreader и любого другого ридера, с...},
  langid = {russian},
  organization = {Хабр},
  file = {/Users/retrobanner/Zotero/storage/U3PKDWZU/747904.html}
}

@inproceedings{karimiNaturalLanguageQuery2022,
  title = {Natural language query and control interface for database using afghan language},
  booktitle = {2022 {{International Conference}} on {{INnovations}} in {{Intelligent SysTems}} and {{Applications}} ({{INISTA}})},
  author = {Karimi, Sadullah and Rasel, Annajiat Alim and Abdullah, Matin Saad},
  date = {2022},
  pages = {1--8},
  publisher = {IEEE},
  url = {https://ieeexplore.ieee.org/abstract/document/9894168/},
  urldate = {2025-06-12},
  langid = {english},
  file = {/Users/retrobanner/Zotero/storage/GBXC96M2/Karimi и др. - 2022 - Natural language query and control interface for database using afghan language.pdf}
}

@inproceedings{karimiNonEnglishNaturalLanguage2022,
  title = {Non-{{English Natural Language Interface}} to {{Databases}}: {{A Systematic Review}}},
  shorttitle = {Non-{{English Natural Language Interface}} to {{Databases}}},
  booktitle = {2022 {{IEEE}} 13th {{Annual Information Technology}}, {{Electronics}} and {{Mobile Communication Conference}} ({{IEMCON}})},
  author = {Karimi, Sadullah and Rasel, Annajiat Alim and Abdullah, Matin Saad},
  date = {2022-10},
  pages = {0391--0397},
  issn = {2644-3163},
  doi = {10.1109/IEMCON56893.2022.9946569},
  url = {https://ieeexplore.ieee.org/document/9946569},
  urldate = {2025-06-14},
  abstract = {A natural language interface (NLI) facilitates communication between a user and a system using a natural language used by a human as a medium. Instead of a complex user interface with numerous controls, the user enters input via natural language in the form of text, speech, signs, etc. The system responds via natural language in the form of text, speech, signs, etc. The use of a natural language interface has been increasing. To interact with a dataset or a database, such a system or interface is not always available. To access data, users need the knowledge of Structured Query Language (SQL) or need to learn an alternative graphical tool or database browser with varying limitations. For non-English speakers, it may create further issues in accessing data. English users can access the database using the natural language interface to database (NLIDB) which converts natural language to English-like Structured Query Language (SQL). For non-English users, the query in non-English language needs to be converted to SQL directly or via the English language as an intermediary. Researchers have proposed NLIDB systems for native speakers of many languages. In this research, we present results from a systematic review of non-English NLIDB with their various approaches. This research aims to assist future NLIDB researchers in understanding the current state and to identify the research gaps.},
  eventtitle = {2022 {{IEEE}} 13th {{Annual Information Technology}}, {{Electronics}} and {{Mobile Communication Conference}} ({{IEMCON}})},
  langid = {english},
  keywords = {Assistive technologies,Databases,Mobile communication,morphological analysis,natural language interface,Natural language interface to database,natural language user interface,Natural languages,NL UI,NLDBI,NLI,NLIDB,non-English NLIDB,semantic analysis,Structured Query Language,syntax analysis,Systematics,User interfaces},
  file = {/Users/retrobanner/Zotero/storage/NVA6KL6Q/Karimi и др. - 2022 - Non-English Natural Language Interface to Databases A Systematic Review.pdf}
}

@article{kimNaturalLanguageSQL2020,
  title = {Natural {{Language}} to {{SQL}}: {{Where Are We Today}}?},
  shorttitle = {Natural language to {{SQL}}},
  author = {Kim, Hyeonji and So, Byeong-Hoon and Han, Wook-Shin and Lee, Hongrae},
  date = {2020-06},
  journaltitle = {Proc. VLDB Endow.},
  volume = {13},
  number = {10},
  pages = {1737--1750},
  issn = {2150-8097},
  doi = {10.14778/3401960.3401970},
  url = {https://dl.acm.org/doi/10.14778/3401960.3401970},
  urldate = {2025-05-15},
  abstract = {Translating natural language to SQL (NL2SQL) has received extensive attention lately, especially with the recent success of deep learning technologies. However, despite the large number of studies, we do not have a thorough understanding of how good existing techniques really are and how much is applicable to real-world situations. A key difficulty is that different studies are based on different datasets, which often have their own limitations and assumptions that are implicitly hidden in the context or datasets. Moreover, a couple of evaluation metrics are commonly employed but they are rather simplistic and do not properly depict the accuracy of results, as will be shown in our experiments. To provide a holistic view of NL2SQL technologies and access current advancements, we perform extensive experiments under our unified framework using eleven of recent techniques over 10+ benchmarks including a new benchmark (WTQ) and TPC-H. We provide a comprehensive survey of recent NL2SQL methods, introducing a taxonomy of them. We reveal major assumptions of the methods and classify translation errors through extensive experiments. We also provide a practical tool for validation by using existing, mature database technologies such as query rewrite and database testing. We then suggest future research directions so that the translation can be used in practice.},
  langid = {english},
  keywords = {evaluate},
  file = {/Users/retrobanner/Zotero/storage/8B83CQ9B/Kim и др. - 2020 - Natural language to SQL where are we today.pdf}
}

@article{kleymenovNoSQLRelyacionnyeBazy2022,
  title = {NoSQL и реляционные базы данных},
  author = {Клейменов, К. С. and Скуднев, Дмитрий Михайлович},
  date = {2022},
  journaltitle = {Актуальные проблемы естественных, математических, технических наук и их преподавания: сборник научных трудов.},
  pages = {60},
  url = {https://elibrary.ru/download/elibrary_49224984_58821542.pdf#page=61},
  urldate = {2025-06-12},
  langid = {russian},
  file = {/Users/retrobanner/Zotero/storage/ECZR4J94/Клейменов и Скуднев - 2022 - NoSQL и реляционные базы данных.pdf}
}

@inproceedings{kolarkarPeerReviewNatural2023,
  title = {A {{Peer Review}} on {{Natural Language Interface}}: {{Various Challenges}} and {{Scope}}},
  shorttitle = {A {{Peer Review}} on {{Natural Language Interface}}},
  booktitle = {2023 {{International Conference}} on {{Disruptive Technologies}} ({{ICDT}})},
  author = {Kolarkar, Ashlesha and Kumar, Sandeep},
  date = {2023-05},
  pages = {252--258},
  doi = {10.1109/ICDT57929.2023.10151334},
  url = {https://ieeexplore.ieee.org/document/10151334},
  urldate = {2025-06-14},
  abstract = {A natural language interface to query databases (NLIDB) permits users to access data stored in databases by typing queries stated in some natural language. It is typical for the elements in a SQL statement to refer to specific information in the database table rather than being expressly mentioned in the natural language query. As a result, it is vital to gauge the similarity of two texts from the standpoint of semantics rather than strings because it can be challenging to deduce the proper element values purely based on the original query in this circumstance. It can be challenging for a text-to-SQL model to decide which column to utilize if the query includes numerous columns with identical semantics. First, the column representations are improved using table contents, and then, the query representation is improved using the revised column representations. As a result of the efficiency of the column contents being less than ideal, a small-scale introduction is planned. A generic module for use in nlidb systems that enables such systems to conduct queries using aggregations is presented in great detail in this survey. These methods include query-based, pattern-based, general, keyword-based, and grammar-based systems.},
  eventtitle = {2023 {{International Conference}} on {{Disruptive Technologies}} ({{ICDT}})},
  langid = {english},
  keywords = {and Natural language database interfaces,Databases,Natural Language Interface,Natural languages,Semantics,Structured Query Language,Surveys,Systematics,User interfaces},
  file = {/Users/retrobanner/Zotero/storage/5R9EMK3K/Kolarkar и Kumar - 2023 - A Peer Review on Natural Language Interface Various Challenges and Scope.pdf}
}

@article{koryaginModeliBazDannyh2020,
  title = {Модели баз данных},
  author = {Корягин, Д. А.},
  date = {2020},
  journaltitle = {Редакционный совет},
  pages = {985},
  url = {https://alley-science.ru/domains_data/files/Collection_of_journals/1_tom_May_2020.pdf#page=985},
  urldate = {2025-06-12},
  langid = {russian},
  file = {/Users/retrobanner/Zotero/storage/GT37BVRT/Корягин - 2020 - МОДЕЛИ БАЗ ДАННЫХ.pdf}
}

@inproceedings{kumarEnhancingRelationalDatabase2024,
  title = {Enhancing {{Relational Database Interaction}} through {{Open AI}} and {{Stanford Core NLP-Based}} on {{Natural Language Interface}}},
  booktitle = {2024 5th {{International Conference}} on {{Recent Trends}} in {{Computer Science}} and {{Technology}} ({{ICRTCST}})},
  author = {Kumar, Surjeet and Alam, Md Shamsher and Khursheed, Zeeshan and Bashar, Shadan and Kalam, Neha},
  date = {2024-04},
  pages = {589--602},
  doi = {10.1109/ICRTCST61793.2024.10578418},
  url = {https://ieeexplore.ieee.org/document/10578418},
  urldate = {2025-06-14},
  abstract = {In the contemporary digital era, data has evolved into the cornerstone of myriad sectors, encompassing academia, commerce, and medical research. Yet, the acquisition of insights from this expansive reservoir of information has historically demanded a level of proficiency in formal languages such as SQL, thereby imposing a substantial barrier for individuals lacking technical expertise. In response to this pervasive challenge, the advent of Natural Language Interface to Databases (NLIDB) has emerged as a promising and transformative solution. NLIDB offers users the capability to engage with databases through the utilization of their natural language, whether expressed in textual or verbal form. This paradigm shift empowers both seasoned experts and neophytes to effortlessly extract valuable information from databases without the prerequisite of specialized technical skills. In this research paper, we propose an innovative system that capitalizes on an intermediary SQL generation process, facilitating the seamless bridge between natural language input and subsequent database retrieval. This novel approach eliminates the need for users to possess awareness of the intricate underlying complexities of the database management process. By simplifying the interaction between users and databases, our system endeavours to democratize data access and promote the universal utilization of this invaluable resource across diverse domains.},
  eventtitle = {2024 5th {{International Conference}} on {{Recent Trends}} in {{Computer Science}} and {{Technology}} ({{ICRTCST}})},
  langid = {english},
  keywords = {Databases,Manuals,Natural Language (NL),Natural languages,NLIDB (Natural Language Interface to Database),OpenAI,Relational Database,Relational databases,Reservoirs,Semantics,SQL (Structured Query Language),Stanford Core NLP,Structured Query Language},
  file = {/Users/retrobanner/Zotero/storage/RI5EMHFS/Kumar и др. - 2024 - Enhancing Relational Database Interaction through Open AI and Stanford Core NLP-Based on Natural Lan.pdf}
}

@article{liCodeSBuildingOpensource2024,
  title = {{{CodeS}}: {{Towards Building Open-source Language Models}} for {{Text-to-SQL}}},
  shorttitle = {{{CodeS}}},
  author = {Li, Haoyang and Zhang, Jing and Liu, Hanbing and Fan, Ju and Zhang, Xiaokang and Zhu, Jun and Wei, Renjie and Pan, Hongyan and Li, Cuiping and Chen, Hong},
  date = {2024-05-29},
  journaltitle = {Proceedings of the ACM on Management of Data},
  publisher = {ACMPUB27New York, NY, USA},
  doi = {10.1145/3654930},
  url = {https://dl.acm.org/doi/10.1145/3654930},
  urldate = {2025-06-14},
  abstract = {Language models have shown promising performance on the task of translating natural language questions into SQL queries (Text-to-SQL). However, most of the state-of-the-art (SOTA) approaches rely on powerful yet closed-source large language models (LLMs),...},
  langid = {english},
  file = {/Users/retrobanner/Zotero/storage/TQYCQPQL/LiHaoyang и др. - 2024 - CodeS Towards Building Open-source Language Models for Text-to-SQL.pdf;/Users/retrobanner/Zotero/storage/AK6ZCGZR/3654930.html}
}

@online{liuNLI4DBSystematicReview2025,
  title = {{{NLI4DB}}: {{A Systematic Review}} of {{Natural Language Interfaces}} for {{Databases}}},
  shorttitle = {{{NLI4DB}}},
  author = {Liu, Mengyi and Xu, Jianqiu},
  date = {2025-03-04},
  eprint = {2503.02435},
  eprinttype = {arXiv},
  eprintclass = {cs},
  doi = {10.48550/arXiv.2503.02435},
  url = {http://arxiv.org/abs/2503.02435},
  urldate = {2025-06-14},
  abstract = {As the demand for querying databases in all areas of life continues to grow, researchers have devoted significant attention to the natural language interface for databases (NLIDB). This paper presents a comprehensive survey of recently proposed NLIDBs. We begin with a brief introduction to natural language processing techniques, executable database languages and the intermediate representation between natural language and executable language, and then provide an overview of the translation process from natural language to executable database language. The translation process is divided into three stages: (i) natural language preprocessing, (ii) natural language understanding, and (iii) natural language translation. Traditional and data-driven methods are utilized in the preprocessing stage. Traditional approaches rely on predefined rules and grammars, and involve techniques such as regular expressions, dependency parsing and named entity recognition. Data-driven approaches depend on large-scale data and machine learning models, using techniques including word embedding and pattern linking. Natural language understanding methods are classified into three categories: (i) rule-based, (ii) machine learning-based, and (iii) hybrid. We then describe a general construction process for executable languages over relational and spatio-temporal databases. Subsequently, common benchmarks and evaluation metrics for transforming natural language into executable language are presented, and methods for generating new benchmarks are explored. Finally, we summarize the classification, development, and enhancement of NLIDB systems, and discuss deep language understanding and database interaction techniques related to NLIDB, including (i) using LLM for Text2SQL tasks, (ii) generating natural language interpretations from SQL, and (iii) transforming speech queries into SQL.},
  langid = {english},
  pubstate = {prepublished},
  keywords = {Computer Science - Databases},
  file = {/Users/retrobanner/Zotero/storage/AMAPH4E7/Liu и Xu - 2025 - NLI4DB A Systematic Review of Natural Language Interfaces for Databases.pdf;/Users/retrobanner/Zotero/storage/A6LPEBY4/2503.html}
}

@online{LLMyPreobrazovaniiZaprosa2023,
  title = {LLM'ы в преобразовании запроса на естественном языке в SQL (text2sql)},
  date = {2023-10-24},
  url = {https://habr.com/ru/companies/sberbank/articles/769454/},
  urldate = {2025-05-15},
  abstract = {Изображение создано с помощью Kandinsky 2.2. Привет, Хабр! На связи участница профессионального сообщества NTA Марина Коробова. Данные занимают центральное место в информационном обществе. Именно...},
  langid = {russian},
  organization = {Хабр},
  keywords = {llm,service},
  file = {/Users/retrobanner/Zotero/storage/YKE57GB8/769454.html}
}

@article{loVIREXVRXQueryInteractive2010,
  title = {{{VIREX}} and {{VRXQuery}}: interactive approach for visual querying of relational databases to produce {{XML}}},
  shorttitle = {{{VIREX}} and {{VRXQuery}}},
  author = {Lo, Anthony and Özyer, Tansel and Kianmehr, Keivan and Alhajj, Reda},
  date = {2010-08-01},
  journaltitle = {J Intell Inf Syst},
  volume = {35},
  number = {1},
  pages = {21--49},
  issn = {1573-7675},
  doi = {10.1007/s10844-009-0087-6},
  url = {https://doi.org/10.1007/s10844-009-0087-6},
  urldate = {2025-06-14},
  abstract = {VIREX provides an interactive approach for querying and integrating relational databases to produce XML documents and the corresponding schemas. VIREX connects to each database specified by the user; analyzes the catalogue to derive an interactive diagram equivalent to the extended entity-relationship diagram; allows the user to display sample records from the tables in the database; allows the user to rename columns and relations by modifying directly the interactive diagram; facilitates the conversion of the relational database into XML; and derives the XML schema. VIREX works even when the catalogue of the relational database is missing; it extracts the required catalogue information by analyzing the database content. Further, VIREX supports VRXQuery, which is a visual naive-users-oriented query language that allows users to specify queries and define views directly on the interactive diagram as a sequence of mouse clicks with minimum keyboard input. The user is expected to interactively decide on certain factors to be considered in producing the XML result. Such factors include: 1)~selecting the relations/attributes to be converted into XML; 2)~specifying a predicate to be satisfied by the information to be converted into XML; 3)~deciding on the order of nesting between the relations to be converted into XML; 4)~ordering for the result. VRXQuery supports selection, projection, nesting/join, union, difference, and order-by. As the result of a query, VIREX displays on the screen the XML schema that satisfies the specified characteristics and generates colored (easy to read) XML~document(s). Further, VIREX allows the user to display and review the SQL and XQuery equivalent to each query expressed in VRXQuery.},
  langid = {english},
  keywords = {Data and Information Visualization,Data conversion,Database Management System,Graphical user interface,Relational database,Triplex-forming oligonucleotide,Virtual and Augmented Reality,Virtual Drug Screening,Visual query language,Visual system,XML},
  file = {/Users/retrobanner/Zotero/storage/Q8XP5MSA/Lo и др. - 2010 - VIREX and VRXQuery interactive approach for visual querying of relational databases to produce XML.pdf}
}

@inproceedings{mamadalievIspolzovanieBolshihYazykovyh2024,
  title = {Использование больших языковых моделей для формирования запросов к графовым базам данных},
  booktitle = {Перспективы развития фундаментальных наук: сборник научных трудов {{XXI Международной}} конференции студентов, аспирантов и молодых ученых, г. {{Томск}}, 23-26 апреля 2024 г. {{Т}}. 3: {{Математика}}},
  author = {Мамадалиев, Р. А.},
  date = {2024},
  pages = {29--31},
  publisher = {Томский политехнический университет},
  url = {https://earchive.tpu.ru/handle/11683/80592},
  urldate = {2025-05-15},
  abstract = {This study investigates the application of large language models for formulating queries to graph databases. A knowledge graph was constructed based on data pertaining to users within a social network community. An analysis and comparison were conducted between queries generated using a large language model and those composed manually.},
  keywords = {graphs,llm},
  file = {/Users/retrobanner/Zotero/storage/TYHF24UX/Мамадалиев - 2024 - Использование больших языковых моделей для формирования запросов к графовым базам данных.pdf}
}

@inproceedings{maranAlternativeApproachesData2020,
  title = {Alternative {{Approaches}} to {{Data Storing}} and {{Processing}}},
  booktitle = {2020 {{V International Conference}} on {{Information Technologies}} in {{Engineering Education}} ( {{Inforino}} )},
  author = {Maran, Mihkel M. and Paniavin, Nikolai A. and Poliushkin, Ilia A.},
  date = {2020-04},
  pages = {1--4},
  publisher = {IEEE},
  location = {Moscow, Russia},
  doi = {10.1109/Inforino48376.2020.9111708},
  url = {https://ieeexplore.ieee.org/document/9111708/},
  urldate = {2025-06-12},
  eventtitle = {2020 {{V International Conference}} on {{Information Technologies}} in {{Engineering Education}} ( {{Inforino}} )},
  isbn = {978-1-7281-4810-6},
  langid = {english},
  file = {/Users/retrobanner/Zotero/storage/J2924IPJ/Maran и др. - 2020 - Alternative Approaches to Data Storing and Processing.pdf}
}

@inproceedings{mEnhancedDataAnalysis2024,
  title = {Enhanced {{Data Analysis}} by {{Natural Language Query Processing}}},
  booktitle = {2024 5th {{International Conference}} on {{Communication}}, {{Computing}} \& {{Industry}} 6.0 ({{C2I6}})},
  author = {M, Sumana and Kalyani, Anagha and Gupta, Anushka and C, Deepa and James, Diya},
  date = {2024-12},
  pages = {1--6},
  doi = {10.1109/C2I663243.2024.10895396},
  url = {https://ieeexplore.ieee.org/document/10895396},
  urldate = {2025-06-14},
  abstract = {This project aims to empower non-technical users in conducting data analysis by enabling effortless data retrieval through natural language queries. These users often lack expertise in querying languages but require access to database-stored data. Traditional methods like SQL query templates and slot-filling techniques have limitations in coverage and understanding complex queries. Models relying on LSTM or BERT may require internet connectivity, limiting offline usability. To address these challenges, transformer-based models, specifically the CodeT5 transformer, were adopted. Unlike previous methods, CodeT5 excels in understanding and generating complex queries accurately, operating offline, and enhancing accessibility. By utilizing CodeT5 and implementing natural language processing techniques for query interpretation, significant improvements were made in the user experience in data analysis tasks. The system generates Pandas queries in Python, integrating seamlessly with Python-based data analysis workflows and supporting multiple data formats for enhanced flexibility. The system streamlines data analysis workflows and increases productivity. Users can upload data in various formats, including csv and txt, and export query results for further analysis or reporting. Its scalability allows adaptation to different databases and querying languages, such as MongoDB or MySQL, catering to diverse applications. The project demonstrated significant improvements in data analysis efficiency and acessibility. The system’s ability to generate and execute queries automatically reduces dependency on technical expertise, empowering users to extract insights from data effortlessly. With its scalability, cross-platform compatibility, and offline functionality, the system represents a significant advancement in democratizing data analysis.},
  eventtitle = {2024 5th {{International Conference}} on {{Communication}}, {{Computing}} \& {{Industry}} 6.0 ({{C2I6}})},
  keywords = {CodeT5,Data analysis,Data Analysis,Long short term memory,Natural language processing,Natural Language Processing,Natural Language Query Processing (NLQP),Pandas,Productivity,Query Generation,Query processing,Scalability,Structured Query Language,Transformers,Usability,User experience},
  file = {/Users/retrobanner/Zotero/storage/5GDEQEUH/M и др. - 2024 - Enhanced Data Analysis by Natural Language Query Processing.pdf}
}

@online{mohammadjafariNaturalLanguageSQL2025,
  title = {From {{Natural Language}} to {{SQL}}: {{Review}} of {{LLM-based Text-to-SQL Systems}}},
  shorttitle = {From {{Natural Language}} to {{SQL}}},
  author = {Mohammadjafari, Ali and Maida, Anthony S. and Gottumukkala, Raju},
  date = {2025-02-04},
  eprint = {2410.01066},
  eprinttype = {arXiv},
  eprintclass = {cs},
  doi = {10.48550/arXiv.2410.01066},
  url = {http://arxiv.org/abs/2410.01066},
  urldate = {2025-06-14},
  abstract = {LLMs when used with Retrieval Augmented Generation (RAG), are greatly improving the SOTA of translating natural language queries to structured and correct SQL. Unlike previous reviews, this survey provides a comprehensive study of the evolution of LLM-based text-to-SQL systems, from early rule-based models to advanced LLM approaches that use (RAG) systems. We discuss benchmarks, evaluation methods, and evaluation metrics. Also, we uniquely study the use of Graph RAGs for better contextual accuracy and schema linking in these systems. Finally, we highlight key challenges such as computational efficiency, model robustness, and data privacy toward improvements of LLM-based text-to-SQL systems.},
  langid = {english},
  pubstate = {prepublished},
  keywords = {Computer Science - Artificial Intelligence,Computer Science - Computation and Language},
  file = {/Users/retrobanner/Zotero/storage/UHGTZ4V5/Mohammadjafari и др. - 2025 - From Natural Language to SQL Review of LLM-based Text-to-SQL Systems.pdf;/Users/retrobanner/Zotero/storage/MSGBZP5V/2410.html}
}

@inproceedings{naikSporqInteractiveEnvironment2021,
  title = {Sporq: {{An Interactive Environment}} for {{Exploring Code}} using {{Query-by-Example}}},
  shorttitle = {Sporq},
  booktitle = {The 34th {{Annual ACM Symposium}} on {{User Interface Software}} and {{Technology}}},
  author = {Naik, Aaditya and Mendelson, Jonathan and Sands, Nathaniel and Wang, Yuepeng and Naik, Mayur and Raghothaman, Mukund},
  date = {2021-10-12},
  series = {{{UIST}} '21},
  pages = {84--99},
  publisher = {Association for Computing Machinery},
  location = {New York, NY, USA},
  doi = {10.1145/3472749.3474737},
  url = {https://dl.acm.org/doi/10.1145/3472749.3474737},
  urldate = {2025-06-13},
  abstract = {There has been widespread adoption of IDEs and powerful tools for program analysis. However, programmers still find it difficult to conveniently analyze their code for custom patterns. Such systems either provide inflexible interfaces or require knowledge of complex query languages and compiler internals. In this paper, we present Sporq, a tool that allows developers to mine their codebases for a range of patterns, including bugs, code smells, and violations of coding standards. Sporq offers an interactive environment in which the user highlights program elements, and the system responds by identifying other parts of the codebase with similar patterns. The programmer can then provide feedback which enables the system to rapidly infer the programmer’s intent. Internally, our system is driven by high-fidelity relational program representations and algorithms to synthesize database queries from examples. Our experiments and user studies with a VS Code extension indicate that Sporq reduces the effort needed by programmers to write custom analyses and discover bugs in large codebases.},
  isbn = {978-1-4503-8635-7},
  langid = {english},
  file = {/Users/retrobanner/Zotero/storage/S28BHXV7/Naik и др. - 2021 - Sporq An Interactive Environment for Exploring Code using Query-by-Example.pdf}
}

@online{PapersCodeExploring,
  title = {Papers with {{Code}} - {{Exploring}} the {{Landscape}} of {{Text-to-SQL}} with {{Large Language Models}}: {{Progresses}}, {{Challenges}} and {{Opportunities}}},
  shorttitle = {Papers with {{Code}} - {{Exploring}} the {{Landscape}} of {{Text-to-SQL}} with {{Large Language Models}}},
  url = {https://paperswithcode.com/paper/exploring-the-landscape-of-text-to-sql-with},
  urldate = {2025-06-15},
  abstract = {No code available yet.},
  langid = {english},
  file = {/Users/retrobanner/Zotero/storage/PYWT3Z8C/exploring-the-landscape-of-text-to-sql-with.html}
}

@article{pazosr.ComparativeStudyCustomization2016,
  title = {Comparative study on the customization of natural language interfaces to databases},
  author = {Pazos R., Rodolfo A. and Aguirre L., Marco A. and González B., Juan J. and Martínez F., José A. and Pérez O., Joaquín and Verástegui O., Andrés A.},
  date = {2016-04-30},
  journaltitle = {Springerplus},
  volume = {5},
  eprint = {27190752},
  eprinttype = {pubmed},
  pages = {553},
  issn = {2193-1801},
  doi = {10.1186/s40064-016-2164-y},
  url = {https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4851672/},
  urldate = {2025-06-14},
  abstract = {In the last decades the popularity of natural language interfaces to databases (NLIDBs) has increased, because in many cases information obtained from them is used for making important business decisions. Unfortunately, the complexity of their customization by database administrators make them difficult to use. In order for a NLIDB to obtain a high percentage of correctly translated queries, it is necessary that it is correctly customized for the database to be queried. In most cases the performance reported in NLIDB literature is the highest possible; i.e., the performance obtained when the interfaces were customized by the implementers. However, for end users it is more important the performance that the interface can yield when the NLIDB is customized by someone different from the implementers. Unfortunately, there exist very few articles that report NLIDB performance when the NLIDBs are not customized by the implementers. This article presents a semantically-enriched data dictionary (which permits solving many of the problems that occur when translating from natural language to SQL) and an experiment in which two groups of undergraduate students customized our NLIDB and English language frontend (ELF), considered one of the best available commercial NLIDBs. The experimental results show that, when customized by the first group, our NLIDB obtained a 44.69~\% of correctly answered queries and ELF 11.83~\% for the ATIS database, and when customized by the second group, our NLIDB attained 77.05~\% and ELF 13.48~\%. The performance attained by our NLIDB, when customized by ourselves was 90~\%.},
  langid = {english},
  pmcid = {PMC4851672},
  file = {/Users/retrobanner/Zotero/storage/SHL5G77M/Pazos R. и др. - 2016 - Comparative study on the customization of natural language interfaces to databases.pdf}
}

@online{PerevodchikEstestvennogoYazyka,
  title = {Переводчик с естественного языка в SQL},
  url = {https://pt.2035.university/project/perevodcik-s-estestvennogo-azyka-v-sql},
  urldate = {2025-06-07},
  langid = {russian},
  file = {/Users/retrobanner/Zotero/storage/5DSE2D2R/Переводчик с естественного языка в SQL.pdf;/Users/retrobanner/Zotero/storage/XQT6XMI7/Переводчик с естественного языка в SQL.pptx;/Users/retrobanner/Zotero/storage/CYEIQB6J/perevodcik-s-estestvennogo-azyka-v-sql.html}
}

@article{pirogovNekotoryeOsobennostiPrepodavaniya2018,
  title = {Некоторые особенности преподавания языка управления базами данных},
  author = {Пирогов, Владислав Юрьевич},
  date = {2018},
  journaltitle = {Мир науки. Педагогика и психология},
  volume = {6},
  number = {6},
  pages = {55},
  publisher = {Общество с ограниченной ответственностью «Издательство «Мир науки»},
  location = {Россия, Москва},
  url = {https://cyberleninka.ru/article/n/nekotorye-osobennosti-prepodavaniya-yazyka-upravleniya-bazami-dannyh},
  urldate = {2025-06-13},
  abstract = {The article deals with the teaching of the SQL language. SQL is a declarative language, that is, it describes the parameters of results or actions, but does not describe the algorithm for achieving the goal. It is emphasized that the SQL language is relational and is focused on interaction with relational databases. The article discusses the features of SQL commands on the example of the command "SELECT" (extracting information from a relational database). The paper deals with a technique that allows students to facilitate the formation of the structure of the SELECT command. The authors note that the use of visual methods and the language "Query by Example" (QBE) is impractical, because this language is not used in professional programming and does not allow to advance in the use of SQL. It is more expedient to study in depth the SQL language. The authors point out that the development of SQL requires the use of a computerized system that must meet the following requirements: 1. The opportunity to use it both in a lecture hall and outside it. 2. The system must be able: a) to make multiple attempts; b) to view results; с) to view the standard query. 3. Control by the teacher, including on-line. 4. Automatic output of results for each topic. As a test criterion, the reference set is compared with the result set obtained from the query written by the students. Next, the authors describe a computerized system allowing students to perform interactive queries with control of their implementation. This system operates on the server and can be used by students through the web-interface. For classroom use was also developed window application, currently used in test mode.},
  issue = {6},
  langid = {russian},
  file = {/Users/retrobanner/Zotero/storage/3TG6ZQSG/Юрьевич - 2018 - Некоторые особенности преподавания языка управления базами данных.pdf}
}

@inproceedings{poetraNaturalLanguageInterface2019,
  title = {Natural {{Language Interface}} to {{Database}} ({{NLIDB}}) for {{Query}} with {{Temporal Aspect}}},
  booktitle = {2019 {{International Conference}} on {{Data}} and {{Software Engineering}} ({{ICoDSE}})},
  author = {Poetra, Dion Ajie and Esterina Widagdo, Tricya and Azizah, Fazat Nur},
  date = {2019-11},
  pages = {1--6},
  issn = {2640-0227},
  doi = {10.1109/ICoDSE48700.2019.9092618},
  url = {https://ieeexplore.ieee.org/document/9092618},
  urldate = {2025-06-14},
  abstract = {NLIDB (Natural Language Interface to Database) was developed to simplify database access using natural language. In previous studies, NLIDB has been developed which can translate natural languages into several languages, including in Indonesian language. However, there are types of queries that cannot be handled by the system, one of them is a query with a temporal aspect. In this study, we propose a method of translating sentences in Indonesian language that have temporal aspects into SQL queries. The process of translating sentence is performed by identifying the input sentence and parsing the sentence into a parsed tree with PC- PATR as the syntax parser. The parsed tree is analyzed and mapped into parts of SQL. Then, an object search is performed to the ontology that is built from the database to get classes, attributes, operators, and values based on tokens in parts of SQL. Finally, the results of the previous process are organized into SQL queries. The NLIDB application built in this study was successful in translating imperative sentences with temporal aspects in Indonesian language into SQL queries for current state, time slice, sequenced and non-sequenced queries.},
  eventtitle = {2019 {{International Conference}} on {{Data}} and {{Software Engineering}} ({{ICoDSE}})},
  langid = {english},
  keywords = {Databases,Natural language,Natural languages,NLIDB,Ontologies,Ontology,Parser,Relational databases,Software engineering,Structured Query Language,Syntactics,Temporal database},
  file = {/Users/retrobanner/Zotero/storage/4CBBYCH5/Poetra и др. - 2019 - Natural Language Interface to Database (NLIDB) for Query with Temporal Aspect.pdf}
}

@inproceedings{polonskiyPerevodRusskogoEstestvennogo2023,
  title = {Перевод русского естественного языка на {{SQL}}},
  booktitle = {Молодежь и современные информационные технологии: сборник трудов {{XX Международной}} научно-практической конференции студентов, аспирантов и молодых учёных, 20-22 марта 2023 г., г. {{Томск}}},
  author = {Полонский, М. И. and Савелов, Д. Ю. and Губин, Евгений Иванович},
  date = {2023},
  pages = {68--69},
  publisher = {Томский политехнический университет},
  url = {https://earchive.tpu.ru/bitstream/11683/77981/1/conference_tpu-2023-C04_p68-69.pdf},
  urldate = {2025-05-15},
  keywords = {transformer},
  file = {/Users/retrobanner/Zotero/storage/VPCL2HBV/conference_tpu-2023-C04_p68-69.pdf}
}

@article{savoskinIssledovanieSposobovPrimeneniya2019,
  title = {Исследование способов применения NoSQL и реляционных баз данных},
  author = {Савоськин, И. В. and Фирсов, А. О.},
  date = {2019},
  journaltitle = {E-Scio},
  number = {6 (33)},
  pages = {101--108},
  publisher = {Лизина Ольга Михайловна},
  location = {Россия, Саранск},
  url = {https://cyberleninka.ru/article/n/issledovanie-sposobov-primeneniya-nosql-i-relyatsionnyh-baz-dannyh},
  urldate = {2025-06-12},
  abstract = {The article discusses two types of databases: relational databases and NoSQL databases. The basic principles of each type of database are considered. Describes the existing classification. The existing DBMS of each type is described and described. The advantages and disadvantages of relational and NoSQL databases are described. Based on the research conducted, conclusions are drawn on the scope of use of each type. The need for NoSQL databases and the possibility of replacing relational databases with them is considered.},
  issue = {6 (33)},
  langid = {russian},
  file = {/Users/retrobanner/Zotero/storage/RMCC6QMP/И.в и А.о - 2019 - Исследование способов применения NoSQL и реляционных баз данных.pdf}
}

@article{sidorovEstestvennyeIskusstvennyeYazyki2024,
  title = {Естественные и искусственные языки: проблема перевода},
  shorttitle = {Естественные и искусственные языки},
  author = {Сидоров, Михаил Владимирович},
  date = {2024},
  journaltitle = {Ноосферные исследования},
  number = {4},
  pages = {89--98},
  publisher = {Федеральное государственное бюджетное образовательное учреждение высшего образования «Ивановский государственный университет»},
  location = {Россия, Иваново},
  url = {https://cyberleninka.ru/article/n/estestvennye-i-iskusstvennye-yazyki-problema-perevoda},
  urldate = {2025-05-15},
  abstract = {Статья посвящена проблемам, с которыми можно столкнуться при переводе между естественными и искусственными языками. Автор рассказывает об общих трудностях, которые могут встретиться при рассмотрении естественных языков. Кроме того, рассматриваются особенности машинного перевода с помощью нейронных сетей и иных программных средств. Приводятся примеры подобных переводов, а также выделяются ключевые особенности подобного подхода. При рассмотрении искусственных языков дается их общая классификация, а также рассматриваются особенности перевода при использовании языков программирования. В заключение делается общий вывод о проблемах перевода и возможные пути решения.},
  issue = {4},
  keywords = {history,problem},
  file = {/Users/retrobanner/Zotero/storage/HLGTN5XY/Владимирович - 2024 - ЕСТЕСТВЕННЫЕ И ИСКУССТВЕННЫЕ ЯЗЫКИ ПРОБЛЕМА ПЕРЕВОДА.pdf}
}

@online{smallcombeSQLVsNoSQL,
  title = {{{SQL}} vs {{NoSQL}}: 5 {{Critical Differences}}},
  shorttitle = {{{SQL}} vs {{NoSQL}}},
  author = {Smallcombe, Mark},
  url = {https://www.integrate.io/blog/the-sql-vs-nosql-difference/},
  urldate = {2025-06-12},
  abstract = {When it comes to choosing a database, one of the biggest decisions is picking a relational (SQL) or non-relational (NoSQL) data structure. While both are viable options, there are key differences between the two that users must keep in mind when making a decision. Here, we break down the most important distinctions and discuss the best SQL and NoSQL database systems available.},
  langid = {english},
  organization = {Integrate.io},
  file = {/Users/retrobanner/Zotero/storage/Q5NZWL6X/the-sql-vs-nosql-difference.html}
}

@article{songSpeechtoSQLSpeechdrivenSQL2024,
  title = {Speech-to-{{SQL}}: toward speech-driven {{SQL}} query generation from natural language question},
  shorttitle = {Speech-to-{{SQL}}},
  author = {Song, Yuanfeng and Wong, Raymond Chi-Wing and Zhao, Xuefang},
  date = {2024-07-01},
  journaltitle = {The VLDB Journal},
  volume = {33},
  number = {4},
  pages = {1179--1201},
  issn = {0949-877X},
  doi = {10.1007/s00778-024-00837-0},
  url = {https://doi.org/10.1007/s00778-024-00837-0},
  urldate = {2025-06-14},
  abstract = {Speech-based inputs have been gaining significant momentum with the popularity of smartphones and tablets in our daily lives, since voice is the most popular and efficient way for human–computer interaction. This paper works toward designing more effective speech-based interfaces to query the structured data in relational databases. We first identify a new task named Speech-to-SQL, which aims to understand the information conveyed by human speech and directly translate it into structured query language (SQL) statements. A naive solution to this problem can work in a cascaded manner, that is, an automatic speech recognition component followed by a text-to-SQL component. However, it requires a high-quality ASR system and also suffers from the error compounding problem between the two components, resulting in limited performance. To handle these challenges, we propose a novel end-to-end neural architecture named SpeechSQLNet to directly translate human speech into SQL queries without an external ASR step. SpeechSQLNet has the advantage of making full use of the rich linguistic information presented in speech. To the best of our knowledge, this is the first attempt to directly synthesize SQL based on common natural language questions in spoken form, rather than a natural language-based version of SQL. To validate the effectiveness of the proposed problem and model, we further construct a dataset named SpeechQL, by piggybacking the widely used text-to-SQL datasets. Extensive experimental evaluations on this dataset show that SpeechSQLNet can directly synthesize high-quality SQL queries from human speech, outperforming various competitive counterparts as well as the cascaded methods in terms of exact match accuracies. We expect speech-to-SQL would inspire more research on more effective and efficient human–machine interfaces to lower the barrier of using relational databases.},
  langid = {english},
  keywords = {AI/NLP/Speech for database,Lisp,Speech act theory,Speech and Audio Processing,Speech and Audio Signal Processing,Speech and Language Therapy,Speech Perception,Speech-driven querying system,Speech-to-SQL,SQL query generation},
  file = {/Users/retrobanner/Zotero/storage/57DTQK4D/Song и др. - 2024 - Speech-to-SQL toward speech-driven SQL query generation from natural language question.pdf}
}

@incollection{soumisVisualQueryBuilder2025,
  title = {A {{Visual Query Builder}} for {{DBpedia}}},
  booktitle = {Web {{Information Systems Engineering}} – {{WISE}} 2024 {{PhD Symposium}}, {{Demos}} and {{Workshops}}},
  author = {Soumis, Dimitrios and Stamoulis, George and Koubarakis, Manolis},
  editor = {Barhamgi, Mahmoud and Wang, Hua and Wang, Xin and Aïmeur, Esma and Mrissa, Michael and Chikhaoui, Belkacem and Boukadi, Khouloud and Grati, Rima and Maamar, Zakaria},
  date = {2025},
  volume = {15463},
  pages = {243--248},
  publisher = {Springer Nature Singapore},
  location = {Singapore},
  doi = {10.1007/978-981-96-1483-7_20},
  url = {https://link.springer.com/10.1007/978-981-96-1483-7_20},
  urldate = {2025-06-14},
  abstract = {In the last years we have seen a huge effort to extract structured content from the information created in various Wikimedia projects. This wealth of information is acquired with the use of linked data. One such example is DBpedia, that allows to perform complex searches on Wikipedia datasets as well as linking them to data from other sources (e.g., data from a domain such as agrifood). While the data are available publicly, knowledge of SPARQL and ontologies is mandatory to search and analyse them. This paper presents an application for Android devices, aimed at familiarizing the average user to generate successful searches and extract desired data from DBpedia, without pre-existing knowledge in semantic web technologies.},
  isbn = {978-981-96-1482-0 978-981-96-1483-7},
  langid = {english},
  file = {/Users/retrobanner/Zotero/storage/LQE8QX2Y/Soumis и др. - 2025 - A Visual Query Builder for DBpedia.pdf}
}

@thesis{stigebornQueryBuilderDatabase2015,
  title = {Query builder for database system},
  author = {Stigeborn, Patrik and Strömgren, Jonathan},
  date = {2015},
  url = {https://www.diva-portal.org/smash/record.jsf?pid=diva2:860417},
  urldate = {2025-06-14},
  langid = {english},
  file = {/Users/retrobanner/Zotero/storage/9P3KLGXC/Stigeborn и Strömgren - 2015 - Query builder for database system.pdf}
}

@article{svarreThinkOutsideSearch2025,
  title = {Think outside the search box: {{A}} comparative study of visual and form-based query builders},
  shorttitle = {Think outside the search box},
  author = {Svarre, Tanja and Russell-Rose, Tony},
  date = {2025-04-01},
  journaltitle = {Journal of Information Science},
  volume = {51},
  number = {2},
  pages = {354--367},
  publisher = {SAGE Publications Ltd},
  issn = {0165-5515},
  doi = {10.1177/01655515221138536},
  url = {https://doi.org/10.1177/01655515221138536},
  urldate = {2025-06-13},
  abstract = {Knowledge workers such as healthcare information professionals, legal researchers and librarians need to create and execute search strategies that are comprehensive, transparent and reproducible. The traditional solution is to use proprietary query-building tools provided by literature database vendors. In the majority of cases, these query builders are designed using a form-based paradigm that requires the user to enter keywords and ontology terms on a line-by-line basis and then combine them using Boolean operators. However, recent years have witnessed significant changes in human–computer interaction technologies, and users can now engage with online information systems using a variety of novel data visualisation techniques. In this article, we evaluate a new approach to query building in which users express concepts as objects on a visual canvas and compare this with a traditional form-based query builder in a laboratory-based user study. The results demonstrate the potential of visual interfaces to mitigate some of the shortcomings associated with form-based interfaces and encourage more exploratory search behaviour. They also demonstrate the value of having a temporary ‘scratch’ space in query formulation. In addition, the findings highlight an ongoing need for transparency and reproducibility in professional search and raise further questions about how these properties may best be supported.},
  langid = {english},
  file = {/Users/retrobanner/Zotero/storage/ET6IBTQ3/Svarre и Russell-Rose - 2025 - Think outside the search box A comparative study of visual and form-based query builders.pdf}
}

@online{Text2sqlPreobrazovanieEstestvennogo,
  title = {Text2sql - Преобразование естественного языка в SQL-запрос},
  url = {https://neuro-seti.ru/text2sql/},
  urldate = {2025-06-07},
  abstract = {Описание сервиса с искусственным интеллектом Text2sql - от редакции Нейро-Сети.ру},
  langid = {russian},
  organization = {Нейро-Сети.ру},
  file = {/Users/retrobanner/Zotero/storage/Y8UDM28B/text2sql.html}
}

@article{vermaPunjabiLanguageInterface2013,
  title = {Punjabi {{Language Interface}} to {{Database}}: a brief review},
  shorttitle = {Punjabi {{Language Interface}} to {{Database}}},
  author = {Verma, Preeti and Arora, Suket and Batra, Kamaljit},
  date = {2013-06-18},
  journaltitle = {ArXiv},
  url = {https://www.semanticscholar.org/paper/Punjabi-Language-Interface-to-Database%3A-a-brief-Verma-Arora/97c402b62376257839c96268e6feaead9d0f3fd1},
  urldate = {2025-06-14},
  abstract = {Unlike most user-computer interfaces, a natural language interface allows users to communicate fluently with a computer system with very little preparation. Databases are often hard to use in cooperating with the users because of their rigid interface. A good NLIDB allows a user to enter commands and ask questions in native language and then after interpreting respond to the user in native language. For a large number of applications requiring interaction between humans and the computer systems, it would be convenient to provide the end-user friendly interface. Punjabi language interface to database would proof fruitful to native people of Punjab, as it provides ease to them to use various e-governance applications like Punjab Sewa, Suwidha, Online Public Utility Forms, Online Grievance Cell, Land Records Management System,legacy matters, e-District, agriculture, etc. Punjabi is the mother tongue of more than 110 million people all around the world. According to available information, Punjabi ranks 10th from top out of a total of 6,900 languages recognized internationally by the United Nations. This paper covers a brief overview of the Natural language interface to database, its different components, its advantages, disadvantages, approaches and techniques used. The paper ends with the work done on Punjabi language interface to database and future enhancements that can be done.},
  langid = {english},
  file = {/Users/retrobanner/Zotero/storage/2U7PCVJX/Verma и др. - 2013 - Punjabi Language Interface to Database a brief review.pdf}
}

@inproceedings{visperasModernTexttoSQLSemantic2023,
  title = {On {{Modern Text-to-SQL Semantic Parsing Methodologies}} for {{Natural Language Interface}} to {{Databases}}: {{A Comparative Study}}},
  shorttitle = {On {{Modern Text-to-SQL Semantic Parsing Methodologies}} for {{Natural Language Interface}} to {{Databases}}},
  booktitle = {2023 {{International Conference}} on {{Artificial Intelligence}} in {{Information}} and {{Communication}} ({{ICAIIC}})},
  author = {Visperas, Moses and Adoptante, Aunhel John and Borjal, Christalline Joie and Abia, Ma. Teresita and Catapang, Jasper Kyle and Peramo, Elmer},
  date = {2023-02},
  pages = {390--396},
  issn = {2831-6983},
  doi = {10.1109/ICAIIC57133.2023.10067134},
  url = {https://ieeexplore.ieee.org/document/10067134},
  urldate = {2025-06-14},
  abstract = {NLIDB research has gained popularity recently, mainly as a means of enhancing outcomes and performance. This study makes an effort to give readers background information on how the subject has evolved recently using different text-to-SQL procedures and approaches, as well as an appraisal of the advantages and disadvantages of each methodology. In contrast with past studies, this paper describes the search and selection processes and provide an overview of the complete process for each approach under review before making comparisons. The authors also evaluated the performance of each methodology against a widely recognized benchmark dataset. Along with model performance, each model was compared and assessed based on its overall structure and associated processes, such as using pre-trained language models and intermediate representations. The results of this study show that the field of text-to-SQL semantic parsing has advanced significantly in recent years, as seen by the improved performance of the models under consideration. It was clear that most recent developments concentrated on the encoder side, even if each technique follows an encoder-decoder design. The imbalance opens up much room for decoder advancement in subsequent studies. Using pre-trained language models was also noteworthy for improving the models' performances; the authors will consider this for future efforts. The selection of intermediate representations, on the other hand, is wholly arbitrary.},
  eventtitle = {2023 {{International Conference}} on {{Artificial Intelligence}} in {{Information}} and {{Communication}} ({{ICAIIC}})},
  langid = {english},
  keywords = {Benchmark testing,Databases,Decoding,natural language processing,natural language query,Natural languages,NLIDB,semantic parsing,Semantics,Structured Query Language,Syntactics,text-to-SQL},
  file = {/Users/retrobanner/Zotero/storage/EMSEBGQA/Visperas и др. - 2023 - On Modern Text-to-SQL Semantic Parsing Methodologies for Natural Language Interface to Databases A.pdf}
}

@inproceedings{weirBootstrappingEndtoEndNatural2019,
  title = {Bootstrapping an {{End-to-End Natural Language Interface}} for {{Databases}}},
  booktitle = {Proceedings of the 2019 {{International Conference}} on {{Management}} of {{Data}}},
  author = {Weir, Nathaniel and Utama, Prasetya},
  date = {2019-06-25},
  series = {{{SIGMOD}} '19},
  pages = {1862--1864},
  publisher = {Association for Computing Machinery},
  location = {New York, NY, USA},
  doi = {10.1145/3299869.3300105},
  url = {https://dl.acm.org/doi/10.1145/3299869.3300105},
  urldate = {2025-06-14},
  abstract = {The ability to extract insights from data is critical for decision making. Intuitive natural language interfaces to databases provide non-technical users with an effective way to formulate complex questions and information needs efficiently and effectively. A recent trend in the area of Natural Language Interfaces for Databases (NLIDBs) has been the use of neural machine translation models to synthesize executable Structured Query Language (SQL) queries from natural language utterances. The main bottleneck in this type of approach is the acquisition of examples for training the model. Recent work has assumed access to a rich manually-curated training set for a given target database. However, this assumption ignores the large manual overhead required to curate the training set for any new database. As a result, NLIDB systems that can simply 'plug in' to any new database and perform effectively for naive users have yet to make their way into commercial products. Here we present DBPal, an end-to-end NLIDB framework in which a neural translation model is trained for any new database schema with minimal manual overhead. In addition to being the first off-the-shelf, neural machine translationbased system of its kind, the contributions of our project are 1) its use of a synthetic training set generation pipeline used to bootstrap a translation model without requiring manually curated data, and 2) its use of state-of-the-art multi-task and cross-domain learning techniques that increases the robustness of the translation model towards unseen linguistic phenomena in new domains. In experiments we show that our system can achieve competitive performance on the recently released benchmarks for nl-to-sql translation. Through ablation experiments we show the benefit of using cross-domain learning techniques on the performance of the system. In a user study we show that DBPal outperforms a well-known rule-based NLIDB and performs comparably to an approach using a similar neural model that relies on manually curated data.},
  isbn = {978-1-4503-5643-5},
  langid = {english},
  file = {/Users/retrobanner/Zotero/storage/VUYNBK9A/Weir и Utama - 2019 - Bootstrapping an End-to-End Natural Language Interface for Databases.pdf}
}

@article{yakushinSravnitelnyyAnalizRelyacionnoy2018,
  title = {Сравнительный анализ реляционной базы данных и документоориентированной NoSQL базы данных в разрезе их применения при создании локального чата/мессенджера},
  author = {Якушин, А. Ю. and Муковозов, А. М. and Исмоилов, М.И.},
  date = {2018},
  journaltitle = {Инновационная наука},
  number = {4},
  pages = {73--83},
  publisher = {Общество с ограниченной ответственностью «Аэтерна»},
  location = {Россия, Уфа},
  issn = {2410-6070},
  url = {https://cyberleninka.ru/article/n/sravnitelnyy-analiz-relyatsionnoy-bazy-dannyh-i-dokumentoorientirovannoy-nosql-bazy-dannyh-v-razreze-ih-primeneniya-pri-sozdanii},
  urldate = {2025-06-13},
  abstract = {В данной статье сравнивается скорость работы реляционной базы данных и постреляционной документоориентированной базы данных при разработке локального чата или мессенджера, работающего с малым количеством одновременно подключенных и активных пользователей порядка нескольких миллионов и обрабатывающего поступающие данные на одном сервере в однопоточном режиме.},
  issue = {4},
  langid = {russian},
  file = {/Users/retrobanner/Zotero/storage/EFBES74J/А.ю и др. - 2018 - Сравнительный анализ реляционной базы данных и документоориентированной NoSQL базы данных в разрезе.pdf}
}

@inproceedings{zhangNaturalLanguageQuerying2024,
  title = {Natural {{Language Querying}} on {{NoSQL Databases}}: {{Opportunities}} and {{Challenges}}},
  shorttitle = {Natural {{Language Querying}} on {{NoSQL Databases}}},
  booktitle = {2024 {{IEEE International Conference}} on {{Big Data}} ({{BigData}})},
  author = {Zhang, Wenlong and Shi, Tian and Wang, Ping},
  date = {2024-12},
  pages = {3353--3357},
  issn = {2573-2978},
  doi = {10.1109/BigData62323.2024.10825998},
  url = {https://ieeexplore.ieee.org/document/10825998},
  urldate = {2025-06-14},
  abstract = {Natural language querying (NLQ) is an important research direction in both natural language processing and database communities. Over the past few years, using modern deep learning language generation and semantic parsing techniques to translate natural language questions to SQL queries, namely Text-to-SQL, has become a promising research topic. Despite the many limitations of using SQL queries for searching due to the predefined data structures and functionality of SQL databases, few attempts have been made beyond SQL query generation. Although there are many well-known, efficient, and scalable NoSQL databases and search engines, such as MongoDB and Elasticsearch, very little work has been devoted to developing NLQ tools for them and exploiting their potential. This gap motivates us to forge and explore the new research direction of NLQ on NoSQL databases. This vision paper aims to investigate the unique characteristics of the NoSQL database in the context of NLQ, examine the integration of NLQ with NoSQL databases, identify emerging research opportunities, and outline key challenges and potential research directions. We hope to inspire and stimulate further research investigation into adopting NoSQL databases for NLQ tasks.},
  eventtitle = {2024 {{IEEE International Conference}} on {{Big Data}} ({{BigData}})},
  langid = {english},
  keywords = {Big Data,Data structures,Databases,Deep learning,Natural language processing,Natural language querying,NoSQL database,NoSQL databases,Search engines,Semantics,Structured Query Language,Translation},
  file = {/Users/retrobanner/Zotero/storage/2ZRKGTF4/Zhang и др. - 2024 - Natural Language Querying on NoSQL Databases Opportunities and Challenges [Vision Paper].pdf}
}

@unpublished{zhuAutomatedCrossdomainExploratory2024,
  title = {Towards {{Automated Cross-domain Exploratory Data Analysis}} through {{Large Language Models}}},
  author = {Zhu, Jun-Peng and Niu, Boyan and Cai, Peng and Ni, Zheming and Wan, Jianwei and Xu, Kai and Huang, Jiajun and Ma, Shengbo and Wang, Bing and Zhou, Xuan and Bao, Guanglei and Zhang, Donghui and Tang, Liu and Liu, Qi},
  date = {2024},
  eprint = {2412.07214},
  eprinttype = {arXiv},
  eprintclass = {cs},
  doi = {10.48550/arXiv.2412.07214},
  url = {http://arxiv.org/abs/2412.07214},
  abstract = {Exploratory data analysis (EDA), coupled with SQL, is essential for data analysts involved in data exploration and analysis. However, data analysts often encounter two primary challenges: (1) the need to craft SQL queries skillfully, and (2) the requirement to generate suitable visualization types that enhance the interpretation of query results. Due to its significance, substantial research efforts have been made to explore different approaches to address these challenges, including leveraging large language models (LLMs). However, existing methods fail to meet real-world data exploration requirements primarily due to (1) complex database schema; (2) unclear user intent; (3) limited cross-domain generalization capability; and (4) insufficient end-to-end text-to-visualization capability. This paper presents TiInsight, an automated SQL-based cross-domain exploratory data analysis system. First, we propose hierarchical data context (i.e., HDC), which leverages LLMs to summarize the contexts related to the database schema, which is crucial for open-world EDA systems to generalize across data domains. Second, the EDA system is divided into four components (i.e., stages): HDC generation, question clarification and decomposition, text-to-SQL generation (i.e., TiSQL), and data visualization (i.e., TiChart). Finally, we implemented an end-to-end EDA system with a user-friendly GUI interface in the production environment at PingCAP. We have also open-sourced all APIs of TiInsight to facilitate research within the EDA community. Through extensive evaluations by a real-world user study, we demonstrate that TiInsight offers remarkable performance compared to human experts. Specifically, TiSQL achieves an execution accuracy of 86.3\% on the Spider dataset using GPT-4. It also demonstrates state-of-the-art performance on the Bird dataset.},
  langid = {english},
  keywords = {Computer Science - Artificial Intelligence,Computer Science - Databases,evaluate,llm,service},
  file = {/Users/retrobanner/Zotero/storage/BSUN4VWJ/Zhu и др. - 2025 - Towards Automated Cross-domain Exploratory Data Analysis through Large Language Models.pdf;/Users/retrobanner/Zotero/storage/5I9P8KXS/2412.html}
}

@online{zhuLargeLanguageModel2024,
  title = {Large {{Language Model Enhanced Text-to-SQL Generation}}: {{A Survey}}},
  shorttitle = {Large {{Language Model Enhanced Text-to-SQL Generation}}},
  author = {Zhu, Xiaohu and Li, Qian and Cui, Lizhen and Liu, Yongkang},
  date = {2024-10-08},
  eprint = {2410.06011},
  eprinttype = {arXiv},
  eprintclass = {cs},
  doi = {10.48550/arXiv.2410.06011},
  url = {http://arxiv.org/abs/2410.06011},
  urldate = {2025-06-14},
  abstract = {Text-to-SQL translates natural language queries into Structured Query Language (SQL) commands, enabling users to interact with databases using natural language. Essentially, the text-to-SQL task is a text generation task, and its development is primarily dependent on changes in language models. Especially with the rapid development of Large Language Models (LLMs), the pattern of text-to-SQL has undergone significant changes. Existing survey work mainly focuses on rule-based and neural-based approaches, but it still lacks a survey of Text-to-SQL with LLMs. In this paper, we survey the large language model enhanced text-to-SQL generations, classifying them into prompt engineering, fine-tuning, pre-trained, and Agent groups according to training strategies. We also summarize datasets and evaluation metrics comprehensively. This survey could help people better understand the pattern, research status, and challenges of LLM-based text-to-SQL generations.},
  langid = {english},
  pubstate = {prepublished},
  keywords = {Computer Science - Databases},
  file = {/Users/retrobanner/Zotero/storage/TTELLAHB/Zhu и др. - 2024 - Large Language Model Enhanced Text-to-SQL Generation A Survey.pdf;/Users/retrobanner/Zotero/storage/32NWLG4J/2410.html}
}

@article{zloofQuerybyexampleDataBase1977,
  title = {Query-by-example: {{A}} data base language},
  shorttitle = {Query-by-example},
  author = {Zloof, Moshe M.},
  date = {1977},
  journaltitle = {IBM systems Journal},
  volume = {16},
  number = {4},
  pages = {324--343},
  publisher = {IBM},
  url = {https://ieeexplore.ieee.org/abstract/document/5388055/},
  urldate = {2025-06-13},
  langid = {english},
  file = {/Users/retrobanner/Zotero/storage/N2SN8WKP/Zloof - 1977 - Query-by-example A data base language.pdf}
}
